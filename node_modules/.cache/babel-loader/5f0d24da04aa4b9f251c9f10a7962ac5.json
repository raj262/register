{"ast":null,"code":"var _jsxFileName = \"/var/www/html/register/src/components/blogs/Blogs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport { Table, Tag, Space, users } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\n\nfunction Blogs() {\n  _s();\n\n  const [user, setUser] = useState([]);\n\n  const getUser = () => {\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      console.log(response);\n      const myUsers = response.data;\n      setUser(myUsers);\n    });\n  };\n\n  useEffect(() => getUser(), []); // const data = [\n  //     {\n  //       key: '1',\n  //       firstName: 'John',\n  //       lastName: 'Brown',\n  //       age: 32,\n  //       address: 'New York No. 1 Lake Park',\n  //       tags: ['nice', 'developer'],\n  //     },\n  //     {\n  //       key: '2',\n  //       firstName: 'Jim',\n  //       lastName: 'Green',\n  //       age: 42,\n  //       address: 'London No. 1 Lake Park',\n  //       tags: ['loser'],\n  //     },\n  //     {\n  //       key: '3',\n  //       firstName: 'Joe',\n  //       lastName: 'Black',\n  //       age: 32,\n  //       address: 'Sidney No. 1 Lake Park',\n  //       tags: ['cool', 'teacher'],\n  //     },\n  //   ];\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: user.map(users => /*#__PURE__*/_jsxDEV(ColumnGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        title: \"First Name\",\n        dataIndex: \"firstName\"\n      }, users.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Last Name\",\n        dataIndex: \"lastName\"\n      }, \"lastName\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Age\",\n        dataIndex: \"age\"\n      }, \"age\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Address\",\n        dataIndex: \"address\"\n      }, \"address\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Tags\",\n        dataIndex: \"tags\",\n        render: tags => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"blue\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, \"tags\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Blogs, \"g26Pb/ecDi+x6k07CsgfguRqPQQ=\");\n\n_c = Blogs;\nexport default Blogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"sources":["/var/www/html/register/src/components/blogs/Blogs.jsx"],"names":["React","useEffect","useState","axios","Table","Tag","Space","users","Column","ColumnGroup","Blogs","user","setUser","getUser","get","then","response","console","log","myUsers","data","map","id","tags","tag"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,KAA5B,QAAyC,MAAzC;;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BL,KAAhC;;AAGA,SAASM,KAAT,GAAiB;AAAA;;AAKb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,OAAO,GAAG,MAAM;AAClBV,IAAAA,KAAK,CAACW,GAAN,CAAU,4CAAV,EACKC,IADL,CACWC,QAAD,IAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMG,OAAO,GAAGH,QAAQ,CAACI,IAAzB;AACAR,MAAAA,OAAO,CAACO,OAAD,CAAP;AACH,KALL;AAMH,GAPD;;AASAlB,EAAAA,SAAS,CAAC,MAAMY,OAAO,EAAd,EAAkB,EAAlB,CAAT,CAhBa,CAiBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBAEQ,QAAC,KAAD;AAAA,cACIF,IAAI,CAACU,GAAL,CAAUd,KAAD,iBACT,QAAC,WAAD;AAAA,8BAEA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,YAAd;AAA2B,QAAA,SAAS,EAAC;AAArC,SAAsDA,KAAK,CAACe,EAA5D;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,SAAS,EAAC;AAApC,SAAmD,UAAnD;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,SAAS,EAAC;AAA9B,SAAwC,KAAxC;AAAA;AAAA;AAAA;AAAA,cALA,eAMA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC;AAAlC,SAAgD,SAAhD;AAAA;AAAA;AAAA;AAAA,cANA,eAOA,QAAC,MAAD;AACI,QAAA,KAAK,EAAC,MADV;AAEI,QAAA,SAAS,EAAC,MAFd;AAII,QAAA,MAAM,EAAEC,IAAI,iBACR;AAAA,oBACCA,IAAI,CAACF,GAAL,CAASG,GAAG,iBACT,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC,MAAX;AAAA,sBACCA;AADD,aAAuBA,GAAvB;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA;AALR,SAGQ,MAHR;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFR;AAgCH;;GA7EQd,K;;KAAAA,K;AA+ET,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport { Table, Tag, Space, users } from 'antd';\nconst { Column, ColumnGroup } = Table;\n\n\nfunction Blogs() {\n  \n\n   \n      \n    const [user, setUser] = useState([]);\n\n    const getUser = () => {\n        axios.get('https://jsonplaceholder.typicode.com/users')\n            .then((response) => {\n                console.log(response);\n                const myUsers = response.data;\n                setUser(myUsers);\n            });\n    };\n\n    useEffect(() => getUser(), []);\n    // const data = [\n    //     {\n    //       key: '1',\n    //       firstName: 'John',\n    //       lastName: 'Brown',\n    //       age: 32,\n    //       address: 'New York No. 1 Lake Park',\n    //       tags: ['nice', 'developer'],\n    //     },\n    //     {\n    //       key: '2',\n    //       firstName: 'Jim',\n    //       lastName: 'Green',\n    //       age: 42,\n    //       address: 'London No. 1 Lake Park',\n    //       tags: ['loser'],\n    //     },\n    //     {\n    //       key: '3',\n    //       firstName: 'Joe',\n    //       lastName: 'Black',\n    //       age: 32,\n    //       address: 'Sidney No. 1 Lake Park',\n    //       tags: ['cool', 'teacher'],\n    //     },\n    //   ];\n      \n\n    return (\n        \n            <Table>\n               {user.map((users) => (\n                <ColumnGroup>\n                \n                <Column title=\"First Name\" dataIndex=\"firstName\" key={users.id} />\n                <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n                \n                <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\n                <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\n                <Column\n                    title=\"Tags\"\n                    dataIndex=\"tags\"\n                    key=\"tags\"\n                    render={tags => (\n                        <span>\n                        {tags.map(tag => (\n                            <Tag color=\"blue\" key={tag}>\n                            {tag}\n                            </Tag>\n                        ))}\n                        </span>\n                    )}\n                    />\n                </ColumnGroup>\n\n                \n               ))}\n            </Table>\n        \n    )\n}\n\nexport default Blogs\n"]},"metadata":{},"sourceType":"module"}