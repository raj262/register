{"ast":null,"code":"var _jsxFileName = \"/var/www/html/register/src/components/crud/read/Read.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Table, Tag, Space } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [apiData, setApiData] = useState([]);\nconst columns = [{\n  title: 'First Name',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: 'Username',\n  dataIndex: 'username',\n  key: 'name'\n}, {\n  title: 'email',\n  dataIndex: 'email',\n  key: 'name'\n}];\n\nfunction Read() {\n  _s();\n\n  useEffect(() => {\n    axios.get('https://61bad66ee943920017784a53.mockapi.io/crud').then(getData => {\n      //  console.log(getData.data);\n      setApiData(getData.data);\n    });\n  });\n  const {\n    Column,\n    ColumnGroup\n  } = Table;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      dataSource: data,\n      children: [/*#__PURE__*/_jsxDEV(ColumnGroup, {\n        title: \"Name\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          title: \"First Name\",\n          dataIndex: \"firstName\"\n        }, \"firstName\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Last Name\",\n          dataIndex: \"lastName\"\n        }, \"lastName\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Age\",\n        dataIndex: \"age\"\n      }, \"age\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Address\",\n        dataIndex: \"address\"\n      }, \"address\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Tags\",\n        dataIndex: \"tags\",\n        render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"blue\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this))\n        }, void 0, false)\n      }, \"tags\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Action\",\n        render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n          size: \"middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\"Edit \", record.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, \"action\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this), \",\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Read, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Read;\nexport default Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/var/www/html/register/src/components/crud/read/Read.jsx"],"names":["React","Fragment","useEffect","useState","Table","Tag","Space","axios","apiData","setApiData","columns","title","dataIndex","key","Read","get","then","getData","data","Column","ColumnGroup","tags","map","tag","text","record","lastName"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport { Table, Tag, Space } from 'antd';\nimport axios from 'axios';\nconst [apiData, setApiData] =  useState([]);\n\nconst columns =[\n  {\n      title:'First Name',\n      dataIndex:'name',\n      key:'name'\n\n  } ,\n  {\n      title:'Username',\n      dataIndex:'username',\n      key:'name'\n\n  },\n  {\n      title:'email',\n      dataIndex:'email',\n      key:'name'\n  }\n\n]\n  \nfunction Read() {\n\n\n\n  useEffect(() => {\n      axios.get('https://61bad66ee943920017784a53.mockapi.io/crud')\n      .then((getData) => {\n        //  console.log(getData.data);\n         setApiData(getData.data);\n      })\n  })\n\n  const { Column, ColumnGroup } = Table;\n\n  \n\n    return (\n        <Fragment>\n             <Table dataSource={data}>\n    <ColumnGroup title=\"Name\">\n      <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\n      <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n    </ColumnGroup>\n    <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\n    <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\n    <Column\n      title=\"Tags\"\n      dataIndex=\"tags\"\n      key=\"tags\"\n      render={tags => (\n        <>\n          {tags.map(tag => (\n            <Tag color=\"blue\" key={tag}>\n              {tag}\n            </Tag>\n          ))}\n        </>\n      )}\n    />\n    <Column\n      title=\"Action\"\n      key=\"action\"\n      render={(text, record) => (\n        <Space size=\"middle\">\n          <a>Edit {record.lastName}</a>\n          <a>Delete</a>\n        </Space>\n      )}\n    />\n  </Table>,\n        </Fragment>    \n    )\n}\n\nexport default Read\n"]},"metadata":{},"sourceType":"module"}