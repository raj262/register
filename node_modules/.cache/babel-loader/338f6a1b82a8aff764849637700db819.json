{"ast":null,"code":"var _jsxFileName = \"/var/www/html/register/src/components/blogs/Blogs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport { Table, Tag, Space } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\n\nfunction Blogs() {\n  _s();\n\n  const [user, setUser] = useState([]);\n\n  const getUser = () => {\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      console.log(response);\n      const myUsers = response.data;\n      setUser(myUsers);\n    });\n  };\n\n  useEffect(() => getUser(), []); // const data = [\n  //     {\n  //       key: '1',\n  //       firstName: 'John',\n  //       lastName: 'Brown',\n  //       age: 32,\n  //       address: 'New York No. 1 Lake Park',\n  //       tags: ['nice', 'developer'],\n  //     },\n  //     {\n  //       key: '2',\n  //       firstName: 'Jim',\n  //       lastName: 'Green',\n  //       age: 42,\n  //       address: 'London No. 1 Lake Park',\n  //       tags: ['loser'],\n  //     },\n  //     {\n  //       key: '3',\n  //       firstName: 'Joe',\n  //       lastName: 'Black',\n  //       age: 32,\n  //       address: 'Sidney No. 1 Lake Park',\n  //       tags: ['cool', 'teacher'],\n  //     },\n  //   ];\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      title: \"First Name\",\n      dataIndex: \"firstName\"\n    }, \"firstName\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      title: \"Last Name\",\n      dataIndex: \"lastName\"\n    }, \"lastName\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      title: \"Age\",\n      dataIndex: \"age\"\n    }, \"age\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      title: \"Address\",\n      dataIndex: \"address\"\n    }, \"address\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      title: \"Tags\",\n      dataIndex: \"tags\",\n      render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"blue\",\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false)\n    }, \"tags\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      title: \"Action\",\n      render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          children: [\"Invite \", record.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, \"action\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Blogs, \"g26Pb/ecDi+x6k07CsgfguRqPQQ=\");\n\n_c = Blogs;\nexport default Blogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"sources":["/var/www/html/register/src/components/blogs/Blogs.jsx"],"names":["React","useEffect","useState","axios","Table","Tag","Space","Column","ColumnGroup","Blogs","user","setUser","getUser","get","then","response","console","log","myUsers","data","tags","map","tag","text","record","lastName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,MAAlC;;;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BJ,KAAhC;;AAGA,SAASK,KAAT,GAAiB;AAAA;;AAKb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMU,OAAO,GAAG,MAAM;AAClBT,IAAAA,KAAK,CAACU,GAAN,CAAU,4CAAV,EACKC,IADL,CACWC,QAAD,IAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMG,OAAO,GAAGH,QAAQ,CAACI,IAAzB;AACAR,MAAAA,OAAO,CAACO,OAAD,CAAP;AACH,KALL;AAMH,GAPD;;AASAjB,EAAAA,SAAS,CAAC,MAAMW,OAAO,EAAd,EAAkB,EAAlB,CAAT,CAhBa,CAiBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBAEQ,QAAC,KAAD;AAAA,4BAEI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,YAAd;AAA2B,MAAA,SAAS,EAAC;AAArC,OAAqD,WAArD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,SAAS,EAAC;AAApC,OAAmD,UAAnD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,SAAS,EAAC;AAA9B,OAAwC,KAAxC;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,SAAS,EAAC;AAAlC,OAAgD,SAAhD;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,MAAD;AACA,MAAA,KAAK,EAAC,MADN;AAEA,MAAA,SAAS,EAAC,MAFV;AAIA,MAAA,MAAM,EAAEQ,IAAI,iBACR;AAAA,kBACCA,IAAI,CAACC,GAAL,CAASC,GAAG,iBACT,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,oBACCA;AADD,WAAuBA,GAAvB;AAAA;AAAA;AAAA;AAAA,gBADH;AADD;AALJ,OAGI,MAHJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAqBI,QAAC,MAAD;AACA,MAAA,KAAK,EAAC,QADN;AAGA,MAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBACJ,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,gCACA;AAAA,gCAAWA,MAAM,CAACC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,OAEI,QAFJ;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAoCH;;GAjFQhB,K;;KAAAA,K;AAmFT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport { Table, Tag, Space } from 'antd';\nconst { Column, ColumnGroup } = Table;\n\n\nfunction Blogs() {\n  \n\n   \n      \n    const [user, setUser] = useState([]);\n\n    const getUser = () => {\n        axios.get('https://jsonplaceholder.typicode.com/users')\n            .then((response) => {\n                console.log(response);\n                const myUsers = response.data;\n                setUser(myUsers);\n            });\n    };\n\n    useEffect(() => getUser(), []);\n    // const data = [\n    //     {\n    //       key: '1',\n    //       firstName: 'John',\n    //       lastName: 'Brown',\n    //       age: 32,\n    //       address: 'New York No. 1 Lake Park',\n    //       tags: ['nice', 'developer'],\n    //     },\n    //     {\n    //       key: '2',\n    //       firstName: 'Jim',\n    //       lastName: 'Green',\n    //       age: 42,\n    //       address: 'London No. 1 Lake Park',\n    //       tags: ['loser'],\n    //     },\n    //     {\n    //       key: '3',\n    //       firstName: 'Joe',\n    //       lastName: 'Black',\n    //       age: 32,\n    //       address: 'Sidney No. 1 Lake Park',\n    //       tags: ['cool', 'teacher'],\n    //     },\n    //   ];\n      \n\n    return (\n        \n            <Table>\n               \n                <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\n                <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n                \n                <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\n                <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\n                <Column\n                title=\"Tags\"\n                dataIndex=\"tags\"\n                key=\"tags\"\n                render={tags => (\n                    <>\n                    {tags.map(tag => (\n                        <Tag color=\"blue\" key={tag}>\n                        {tag}\n                        </Tag>\n                    ))}\n                    </>\n                )}\n                />\n                <Column\n                title=\"Action\"\n                key=\"action\"\n                render={(text, record) => (\n                    <Space size=\"middle\">\n                    <a>Invite {record.lastName}</a>\n                    <a>Delete</a>\n                    </Space>\n                )}\n                />\n            </Table>\n        \n    )\n}\n\nexport default Blogs\n"]},"metadata":{},"sourceType":"module"}